//https://practice.geeksforgeeks.org/problems/find-sum-of-different-corresponding-bits-for-all-pairs/0


#include <bits/stdc++.h>
using namespace std;
typedef long long ll ;
const ll MOD = 1e9 + 7 ; 
ll  totalHammingDistance(vector<ll>& v )
{
        
        
        int dp [ 64 ] ;
        int n = v.size() ; 
        memset ( dp , 0 , sizeof ( dp  ) )  ; 
        for ( ll i = 0 ; i < n ; i ++ )
        {
            for ( ll j = 0 ; j < 64; j ++ )
            {
                if ( v [ i ] & 1 )
                        dp [ j ] ++ ; 
                v [ i ] = v [ i ] >> 1 ; 
            }
        }
        
        
        ll ans = 0 ; 
        
        for ( int i = 0 ; i < 32 ; i ++ )
            ans  = ( ans % MOD + (  ( n - dp [ i ] ) % MOD  * dp [ i ] % MOD ) )  % MOD ;
        
        return ans % MOD ; 
        
        
}
int main() {
    
    
    ll t ; 
    cin >> t ; 
    while ( t-- )
    {
        ll n ; 
        cin >> n ; 
        vector < ll > v( n );
        ll i = 0 ; 
        while (  i < n )  cin >> v [ i ], i ++ ;
        ll ans = ( 2 * totalHammingDistance ( v ) ) % MOD ;
        cout << ans << endl ; 
        
    }
	//code
	return 0;
}
